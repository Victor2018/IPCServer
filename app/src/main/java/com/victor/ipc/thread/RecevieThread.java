package com.victor.ipc.thread;import android.util.Log;import com.victor.ipc.dao.MessageDao;import com.victor.ipc.dao.UserDao;import com.victor.ipc.data.Message;import com.victor.ipc.data.User;import java.io.IOException;import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.net.Socket;public class RecevieThread extends Thread {	private String TAG = "RecevieThread";	private Socket socket;	public RecevieThread(Socket socket){		this.socket = socket;	}	public void run(){		try {			Log.e(TAG,"some body come in......");			ObjectInputStream ois = new ObjectInputStream(socket.getInputStream());			ObjectOutputStream oos = new ObjectOutputStream(socket.getOutputStream());			User user = (User)ois.readObject();			if (user.getType() == 0) {// 0 regist				Log.e(TAG,"new user regist......");				if (UserDao.check(user)){					Log.e(TAG,"name exists......");					oos.writeObject("name exists");				} else {					UserDao.regist(user);					Log.e(TAG,"regist success......");					oos.writeObject("success");				}				oos.flush();				oos.close();				ois.close();				socket.close();			} else {				if (MessageDao.dao.contains(user)){					Log.e(TAG,"name already login......");					oos.writeObject("name already login");					oos.flush();					oos.close();					ois.close();					socket.close();				} else if (UserDao.checkLogin(user) == 1) {					Log.e(TAG,"name error......");					oos.writeObject("name error");					oos.flush();					oos.close();					ois.close();					socket.close();				} else if (UserDao.checkLogin(user) == 2) {					Log.e(TAG,"pass error......");					oos.writeObject("pass error");					oos.flush();					oos.close();					ois.close();					socket.close();				} else {					Log.e(TAG,"login success......");					User u = UserDao.getUser(user);					oos.writeObject(u);					oos.flush();					MessageDao.dao.addUser(u);					MessageDao.dao.putUserSocket(user.getName(), oos);					Message messwel = new Message();					messwel.setSendName("服务器");					messwel.setMessage("哈哈聊天室欢迎您");					messwel.setToName("");					oos.writeObject(messwel);					oos.flush();					Message mess = (Message) ois.readObject();					while (mess != null && !mess.getMessage().equals("exit")) {						MessageDao.dao.saveMessage(mess);						mess = (Message) ois.readObject();					}					MessageDao.dao.removeUser(user);					MessageDao.dao.removeUserSocket(user.getName());					u.setType(9);					Message m = new Message();					m.setMessage("end");					oos.writeObject(m);					oos.flush();					oos.close();					ois.close();					socket.close();				}			}		} catch (IOException e) {			// TODO Auto-generated catch block			e.printStackTrace();		} catch (ClassNotFoundException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}	}}