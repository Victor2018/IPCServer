package com.victor.ipc.model;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.database.sqlite.SQLiteOpenHelper;import android.text.TextUtils;import com.victor.ipc.data.Movie;import com.victor.ipc.util.Constant;import java.lang.reflect.Field;import java.util.HashMap;/** * Created by victor on 2017/3/8. */public class DataBase extends SQLiteOpenHelper{    public static final HashMap<Class<?>, String> TYPES;    static {        TYPES = new HashMap<Class<?>, String>();        TYPES.put(byte.class, "byte");        TYPES.put(int.class, "integer");        TYPES.put(short.class, "short");        TYPES.put(long.class, "long");        TYPES.put(float.class, "float");        TYPES.put(double.class, "double");        TYPES.put(boolean.class, "integer");        TYPES.put(char.class, "char(1)");        TYPES.put(String.class, "text");        TYPES.put(byte[].class, "blob");    }    public DataBase(Context context, String name, SQLiteDatabase.CursorFactory factory, int version) {        super(context, Constant.DbConfig.DB_NAME, factory, Constant.DbConfig.DB_VERSION);    }    @Override    public void onCreate(SQLiteDatabase db) {        createMovieTb(db);    }    @Override    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {        if (isTbExist(Constant.TB.MOVIE)) {            db.execSQL("drop table " + Constant.TB.MOVIE);        }        onCreate(db);    }    public boolean isTbExist (String tbName) {        boolean isTbExist = false;        if (TextUtils.isEmpty(tbName)) {            return isTbExist;        }        SQLiteDatabase db = null;        Cursor cursor = null;        try {            db = getReadableDatabase();            String sql = "select count(1) from " + "sqlite_master " + " where type ='table' and name ='" + tbName.trim() + "' ";            cursor = db.rawQuery(sql,null);            if(cursor.moveToNext()){                int count = cursor.getInt(0);                if(count > 0){                    isTbExist = true;                }            }        } catch (Exception e) {            e.printStackTrace();        } finally {            if (db != null) {                db.close();            }            if (cursor != null) {                cursor.close();            }        }        return isTbExist;    }    private void createMovieTb (SQLiteDatabase db) {        String sql = getTableBuildingSql(Movie.class);        db.execSQL(sql);    }    /**     * 根据实体类构造表结构     * @param cls     */    private String getTableBuildingSql(Class<?> cls) {        String tbName = cls.getSimpleName().toLowerCase();        StringBuffer stringBuffer = new StringBuffer("create table if not exists " + tbName + "(_id integer primary key autoincrement,");        Field[] fields = cls.getDeclaredFields();        for (int i=0;i<fields.length;i++) {            if (!fields[i].isAccessible()) {                fields[i].setAccessible(true);            }            String name = fields[i].getName();            String type = TYPES.get(fields[i].getType());            stringBuffer.append(name + " " + type);            if (i < fields.length - 1) {                stringBuffer.append(",");            }        }        stringBuffer.append(")");        return stringBuffer.toString();    }}