package com.victor.ipc.adapter;import android.content.Context;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import com.victor.ipc.data.Movie;import com.victor.ipc.server.R;import java.util.List;/** * Created by victor on 2016/6/1. */public class MovieAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>{    private String TAG = "MovieAdapter";    private final LayoutInflater mLayoutInflater;    private final Context mContext;    private boolean isHeaderVisible = true;    private boolean isFooterVisible = true;    protected int mHeaderCount = 1;//头部View个数    protected int mBottomCount = 1;//底部View个数    private int ITEM_TYPE_HEADER = 0;    private int ITEM_TYPE_CONTENT = 1;    private int ITEM_TYPE_BOTTOM = 2;    private List<Movie> datas;    private static OnItemClickListener mOnItemClickListener;    public interface OnItemClickListener {        void OnItemClick(int position);    }    public interface OnMoreClickListener {        void OnMoreClick(int position);    }    public MovieAdapter(Context context, OnItemClickListener listener) {        mContext = context;        mOnItemClickListener = listener;        mLayoutInflater = LayoutInflater.from(mContext);    }    public void setHeaderVisible (boolean visible) {        isHeaderVisible = visible;        mHeaderCount = 1;        if (!isHeaderVisible) {            mHeaderCount = 0;        }        notifyDataSetChanged();    }    public void setFooterVisible (boolean visible) {        isFooterVisible = visible;        mBottomCount = 1;        if (!isFooterVisible) {            mBottomCount = 0;        }        notifyDataSetChanged();    }    public void setDatas(List<Movie> datas) {        this.datas = datas;    }    @Override    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {        if (viewType == ITEM_TYPE_HEADER) {            return onCreateHeaderView(parent);        } else if (viewType == ITEM_TYPE_CONTENT) {            return onCreateContentView(parent);        } else if (viewType == ITEM_TYPE_BOTTOM) {            return onCreateBottomView(parent);        }        return null;    }    public RecyclerView.ViewHolder onCreateHeaderView (ViewGroup parent){        return new HeaderViewHolder(mLayoutInflater.inflate(R.layout.recyclerview_img_item, parent, false));    }    public RecyclerView.ViewHolder onCreateContentView (ViewGroup parent){        return new ContentViewHolder(mLayoutInflater.inflate(R.layout.lv_move_item, parent, false));    }    public RecyclerView.ViewHolder onCreateBottomView (ViewGroup parent) {        return new BottomViewHolder(mLayoutInflater.inflate(R.layout.recyclerview_foot, parent, false));    }    @Override    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {        if (holder instanceof HeaderViewHolder) {//            ((HeaderViewHolder) holder).mTvTitle.setText(titleList.get(0));        } else if (holder instanceof ContentViewHolder) {            ContentViewHolder contentViewHolder = (ContentViewHolder) holder;            contentViewHolder.mTvTitle.setText(datas.get(position - mHeaderCount).getName());            contentViewHolder.mTvType.setText(datas.get(position - mHeaderCount).getType());//            Glide.with(mContext).load(datas.get(position - mHeaderCount).getImg()).centerCrop().error(R.mipmap.default_img).into(contentViewHolder.mCivImg);        } else if (holder instanceof BottomViewHolder) {//            ((BottomViewHolder) holder).mTvTitle.setVisibility(View.GONE);        }    }    @Override    public int getItemViewType(int position) {        int dataItemCount = getContentItemCount();        if (mHeaderCount != 0 && position < mHeaderCount) {//头部View            return ITEM_TYPE_HEADER;        } else if (mBottomCount != 0 && position >= (mHeaderCount + dataItemCount)) {//底部View            return ITEM_TYPE_BOTTOM;        } else {            return ITEM_TYPE_CONTENT;        }    }    public boolean isHeaderView(int position) {        return mHeaderCount != 0 && position < mHeaderCount;    }    public boolean isBottomView(int position) {        return mBottomCount != 0 && position >= (mHeaderCount + getContentItemCount());    }    public void add(String title) {//        titleList.add(title);        notifyItemInserted(1);    }    public void remove(int position) {//        titleList.remove(position);        notifyItemRemoved(position);    }    public int getContentItemCount() {        return datas == null ? 0 : datas.size();    }    @Override    public int getItemCount() {        return mHeaderCount + getContentItemCount() + mBottomCount;    }    public class ContentViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener{        ImageView mIvImg;        TextView mTvTitle,mTvType;        ContentViewHolder(View view) {            super(view);            mIvImg = (ImageView) view.findViewById(R.id.iv_img);            mTvTitle = (TextView) view.findViewById(R.id.tv_title);            mTvType = (TextView) view.findViewById(R.id.tv_type);            view.setOnClickListener(this);        }        @Override        public void onClick(View v) {            if (mOnItemClickListener != null) {                mOnItemClickListener.OnItemClick(getAdapterPosition() - mHeaderCount);            }        }    }    public static class HeaderViewHolder extends RecyclerView.ViewHolder {        ImageView mIvImg;        TextView mTvTitle;        public HeaderViewHolder(View itemView) {            super(itemView);            mIvImg = (ImageView) itemView.findViewById(R.id.iv_img);            mTvTitle = (TextView) itemView.findViewById(R.id.tv_title);        }    }    public static class BottomViewHolder extends RecyclerView.ViewHolder {        ImageView mIvImg;        TextView mTvTitle;        public BottomViewHolder(View itemView) {            super(itemView);            mIvImg = (ImageView) itemView.findViewById(R.id.iv_img);            mTvTitle = (TextView) itemView.findViewById(R.id.tv_title);        }    }}